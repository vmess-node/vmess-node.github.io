<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vmess-node.github.io/news/article-56909.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>ElementUI el-upload 断点续传文件</title>
        <meta name="description" content="官方的Upload 组件从文档和所有demo来看，均是选中文件直接上传，但是业务系统有大文件上传的需求，所以要用这个组件封装一个断点续传的功能。 从官方给出的文档看到有个http-request 覆盖" />
        <link rel="icon" href="/assets/website/img/vmess_node/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Vmess Node免费节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vmess-node.github.io/news/article-56909.htm" />
    <meta property="og:site_name" content="Vmess Node免费节点订阅官网" />
    <meta property="og:title" content="ElementUI el-upload 断点续传文件" />
    <meta property="og:image" content="https://vmess-node.github.io/uploads/20240804-1/11bd935741dfefbeb4b96ba178d6af10.webp" />
        <meta property="og:release_date" content="2025-02-15T05:22:03" />
    <meta property="og:updated_time" content="2025-02-15T05:22:03" />
        <meta property="og:description" content="官方的Upload 组件从文档和所有demo来看，均是选中文件直接上传，但是业务系统有大文件上传的需求，所以要用这个组件封装一个断点续传的功能。 从官方给出的文档看到有个http-request 覆盖" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="ElementUI el-upload 断点续传文件">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google fonts -->
    <link href="//fonts.googleapis.com/css?family=Work+Sans:100,200,300,400,500,600,700,800,900&display=swap" rel="stylesheet">
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/vmess_node/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-M9G1YCGHCT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-M9G1YCGHCT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <div class="w3l-top-header">
        <header id="site-header" class="fixed-top">
            <div class="container">
                <nav class="navbar navbar-expand-lg navbar-dark stroke">
                    <a class="navbar-brand" href="/">
                                        <span>Vmess Node</span>
                                        </a>
                    <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                        <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                        </span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                        <ul class="navbar-nav mx-auto">
                                                        <li class="nav-item">
                                <a class="nav-link" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/client.htm">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/news/">新闻资讯</a>
                            </li>
                                                    </ul>
                    </div>
                </nav>
            </div>
        </header>
    </div>
    <!--/header-->
    <!-- breadcrum -->
    <section class="w3l-deal-breadcrum">
        <div class="breadcrum py-5">
            <div class="container">
                <h1>ElementUI el-upload 断点续传文件</h1>
                <p><a href="/">首页</a> &nbsp; / &nbsp; <a href="/news/">新闻资讯</a>  &nbsp; / &nbsp; 正文</p>
            </div>
        </div>
    </section>
    <!-- //breadcrum -->
        <!-- //stats -->
    <section class="w3l-index2 py-5" id="about">
        <div class="container py-lg-3">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <p>官方的<code>Upload</code> 组件从文档和所有demo来看，均是选中文件直接上传，但是业务系统有大文件上传的需求，所以要用这个组件封装一个断点续传的功能。</p> <p>从官方给出的文档看到有个<code>http-request 覆盖默认的上传行为，可以自定义上传的实现</code> 似乎能满足要求，那就开撸。</p> <p>确定需求：最大支持2GB的任意文件上传，小于100M直接上传，大于100M的时候分块上传，并且要支持断点续传。</p> <p>我拿了官方的一个demo</p> <pre><code> &lt;el-upload       drag       multiple       :http-request="checkedFile"       action="/"     &gt;       &lt;i class="el-icon-upload"&gt;&lt;/i&gt;       &lt;div class="el-upload__text"&gt;将文件拖到此处，或&lt;em&gt;点击上传&lt;/em&gt;&lt;/div&gt;     &lt;/el-upload&gt;</code></pre> <p>可拖动上传，比较高大上一点。</p> <p><code>http-request</code> 方法定义之后，文件上传会先走这个方法，传入一个参数</p> <pre><code>options = { 	headers: this.headers, 	withCredentials: this.withCredentials, 	file: rawFile, 	data: this.data, 	filename: this.name, 	action: this.action, 	onProgress: e =&gt; { 	  this.onProgress(e, rawFile); 	}, 	onSuccess: res =&gt; { 	  this.onSuccess(res, rawFile); 	  delete this.reqs[uid]; 	}, 	onError: err =&gt; { 	  this.onError(err, rawFile); 	  delete this.reqs[uid]; 	} }</code></pre> <p>该参数就是组件的参数集合，同时，如果定义了这个方法，组件的<code>submit</code>方法就会被拦截掉（注意别在这个方法里面调用组件的<code>submit</code> 方法，会造成死循环），在这个方法里面我就可以搞我想搞的事情了。</p> <p>说一下要注意的：<br /> 使用这个断点续传方法一定要先和服务端协调好，看他们怎么处理的，比如我这里就是按照文件分块后按照序号和文件id等信息跟服务端建立联系，服务端从接收到第一块文件的请求开始就会检测该文件是否已经存在已接收的文件块，然后再返回续传的块的序号，最终再调用接口校验文件完不完整。</p> <p>如果使用<code>mock</code>来模拟接口的话，<code>onUploadProgress</code>是无效的，因为<code>mock</code>会重新声明一个<code>XMLHttpRequest</code>，不会继承<code>onUploadProgress</code>。</p> <p>以上，就是<code>el-upload</code>组件的大文件分块上传的改造方案，目前还很粗糙，甚至还没过测试，如有问题会持续更新</p> <p>20180726<br /> 看源码的时候发现<code>http-request</code> 这个传入的回调函数应该返回一个<code>Promise</code></p> <pre><code>  const req = this.httpRequest(options);   this.reqs[uid] = req;   if (req &amp;&amp; req.then) {     req.then(options.onSuccess, options.onError);   }</code></pre> <p>然后组件自己会做成功和错误的处理，但是我同时又注意到了组件是有删除文件的功能的，那我请求自己实现的话，这功能岂不是没法用？果然我一点X，立马报了一个<code>reqs[uid].abort is not a function</code> ，果然如此，我返回了一个最普通的<code>Promise</code>，当然没有<code>abort</code>方法了（是原生<code>XMLHttpRequest</code> 对象的方法）<br /> 我在返回的<code>Promise</code>动了一下手脚</p> <pre><code>const prom = new Promise((resolve, reject) =&gt; {}) prom.abort = () =&gt; {} return prom</code></pre> <p>这三句话的意思就：大爷我给您跪了，别报错……<br /> 接下来就在组件的钩子函数<code>before-remove</code>来处理删除文件的功能。<br /><code>axios</code>截断请求可以传入一个<code>cancelToken</code>的值来返回一个<code>cancel function</code>，这部分就在data里面添加一个请求队列的参数，再把文件id和相关请求的截断方法push进去就可以了，改造后的<code>postFile</code>方法如下</p> <pre><code> postFile (param, onProgress) {       const formData = new FormData()       for (let p in param) {         formData.append(p, param<div class="section-content"></p></div><p>)       }       const { requestCancelQueue } = this       const config = {         cancelToken: new axios.CancelToken(function executor (cancel) {           if (requestCancelQueue[param.uid]) {             requestCancelQueue[param.uid]()             delete requestCancelQueue[param.uid]           }           requestCancelQueue[param.uid] = cancel         }),         onUploadProgress: e =&gt; {           e.percent = Number(((e.loaded / e.total) * (1 / (param.chunks || 1)) * 100).toFixed(2))           onProgress(e)         }       }       return axios.post('/upload', formData, config).then(rs =&gt; rs.data.data)     }</code></pre> <p>然后<code>before-remove</code>钩子的处理就只需要调用就OK了</p> <pre><code>	removeFile (file) {       this.requestCancelQueue[file.uid]()       delete this.requestCancelQueue[file.uid]       return false     }</code></pre> <p>最后贴上完整的组件源码，直接拷贝粘贴可用（依赖element-ui、axios）</p> <pre><code>&lt;template&gt;   &lt;el-upload     drag     multiple     :auto-upload="true"     :http-request="checkedFile"     :before-remove="removeFile"     :limit="10"     action="/"   &gt;     &lt;i class="el-icon-upload"&gt;&lt;/i&gt;     &lt;div class="el-upload__text"&gt;将文件拖到此处，或&lt;em&gt;点击上传&lt;/em&gt;&lt;/div&gt;   &lt;/el-upload&gt; &lt;/template&gt; &lt;script&gt; import axios from 'axios' export default {   data () {     return {       maxSize: 5 * 1024 * 1024 * 1024, // 上传最大文件限制       multiUploadSize: 500 * 1024 * 1024, // 大于这个大小的文件使用分块上传(后端可以支持断点续传)       eachSize: 500 * 1024 * 1024, // 每块文件大小       requestCancelQueue: [], // 请求方法队列（调用取消上传     }   },   mounted () {   },   methods: {     async checkedFile (options) {       const { maxSize, multiUploadSize, getSize, splitUpload, singleUpload } = this       const { file, onProgress, onSuccess, onError } = options       if (file.size &gt; maxSize) {         return this.$message({           message: `您选择的文件大于${getSize(maxSize)}`,           type: 'error'         })       }       const uploadFunc = file.size &gt; multiUploadSize ? splitUpload : singleUpload       try {         await uploadFunc(file, onProgress)         this.$message({           message: '上传成功',           type: 'success'         })         onSuccess()       } catch (e) {         console.error(e)         this.$message({           message: e.message,           type: 'error'         })         onError()       }       const prom = new Promise((resolve, reject) =&gt; {})       prom.abort = () =&gt; {}       return prom     },     // 格式化文件大小显示文字     getSize (size) {       return size &gt; 1024         ? size / 1024 &gt; 1024           ? size / (1024 * 1024) &gt; 1024             ? (size / (1024 * 1024 * 1024)).toFixed(2) + 'GB'             : (size / (1024 * 1024)).toFixed(2) + 'MB'           : (size / 1024).toFixed(2) + 'KB'         : (size).toFixed(2) + 'B'     },     // 单文件直接上传     singleUpload (file, onProgress) {       return this.postFile({ file, uid: file.uid, fileName: file.fileName }, onProgress)     },     // 大文件分块上传     splitUpload (file, onProgress) {       return new Promise(async (resolve, reject) =&gt; {         try {           const { eachSize } = this           const chunks = Math.ceil(file.size / eachSize)           const fileChunks = await this.splitFile(file, eachSize, chunks)           let currentChunk = 0           for (let i = 0; i &lt; fileChunks.length; i++) {             // 服务端检测已经上传到第currentChunk块了，那就直接跳到第currentChunk块，实现断点续传             console.log(currentChunk, i)             if (Number(currentChunk) === i) {               // 每块上传完后则返回需要提交的下一块的index               currentChunk = await this.postFile({                 chunked: true,                 chunk: i,                 chunks,                 eachSize,                 fileName: file.name,                 fullSize: file.size,                 uid: file.uid,                 file: fileChunks[i]               }, onProgress)             }           }           const isValidate = await this.validateFile({             chunks: fileChunks.length,             fileName: file.name,             fullSize: file.size,             uid: file.uid           })           if (!isValidate) {             throw new Error('文件校验异常')           }           resolve()         } catch (e) {           reject(e)         }       })     },     // 文件分块,利用Array.prototype.slice方法     splitFile (file, eachSize, chunks) {       return new Promise((resolve, reject) =&gt; {         try {           setTimeout(() =&gt; {             const fileChunk = []             for (let chunk = 0; chunks &gt; 0; chunks--) {               fileChunk.push(file.slice(chunk, chunk + eachSize))               chunk += eachSize             }             resolve(fileChunk)           }, 0)         } catch (e) {           console.error(e)           reject(new Error('文件切块发生错误'))         }       })     },     removeFile (file) {       this.requestCancelQueue[file.uid]()       delete this.requestCancelQueue[file.uid]       return true     },     // 提交文件方法,将参数转换为FormData, 然后通过axios发起请求     postFile (param, onProgress) {       const formData = new FormData()       for (let p in param) {         formData.append(p, param<div class="section-content"></p></div><p>)       }       const { requestCancelQueue } = this       const config = {         cancelToken: new axios.CancelToken(function executor (cancel) {           if (requestCancelQueue[param.uid]) {             requestCancelQueue[param.uid]()             delete requestCancelQueue[param.uid]           }           requestCancelQueue[param.uid] = cancel         }),         onUploadProgress: e =&gt; {           if (param.chunked) {             e.percent = Number(((((param.chunk * (param.eachSize - 1)) + (e.loaded)) / param.fullSize) * 100).toFixed(2))           } else {             e.percent = Number(((e.loaded / e.total) * 100).toFixed(2))           }           onProgress(e)         }       }       return axios.post('http://localhost:8888', formData, config).then(rs =&gt; rs.data)     },     // 文件校验方法     validateFile (file) {       return axios.post('http://localhost:8888/validateFile', file).then(rs =&gt; rs.data)     }   } } &lt;/script&gt;</code></pre> <p>转载请注明出处蟹蟹</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-56908.htm">spring.profiles.active的使用</a></p>
                                        <p>下一个：<a href="/news/article-57478.htm">动物疫苗的种类有哪些,各有什么特点呢（动物疫苗种类及类型）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-39471.htm" title="Springboot如何同时连接两个数据库">Springboot如何同时连接两个数据库</a></li>
                        <li class="py-2"><a href="/news/article-53587.htm" title="动物疫苗价格排行榜前十的有哪些品种（动物疫苗价格排行榜前十的有哪些品种图片）">动物疫苗价格排行榜前十的有哪些品种（动物疫苗价格排行榜前十的有哪些品种图片）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-13-free-vmess-node.htm" title="1月13日 | Vmess节点订阅每天更新22.1M/S免费订阅链接地址分享">1月13日 | Vmess节点订阅每天更新22.1M/S免费订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-35690.htm" title="人和宠物打的狂犬疫苗一样吗 人和宠物打的狂犬疫苗一样吗多少钱">人和宠物打的狂犬疫苗一样吗 人和宠物打的狂犬疫苗一样吗多少钱</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-31-today-vmess-node.htm" title="1月31日 | Vmess节点订阅每天更新20.6M/S免费订阅链接地址分享">1月31日 | Vmess节点订阅每天更新20.6M/S免费订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-41970.htm" title="宠物领养证书怎么办理流程视频（正规领养宠物流程）">宠物领养证书怎么办理流程视频（正规领养宠物流程）</a></li>
                        <li class="py-2"><a href="/news/article-44448.htm" title="宠物粮进货平台有哪些品牌的好的简单介绍">宠物粮进货平台有哪些品牌的好的简单介绍</a></li>
                        <li class="py-2"><a href="/news/article-49398.htm" title="沈阳卖狗网（沈阳卖狗地方）">沈阳卖狗网（沈阳卖狗地方）</a></li>
                        <li class="py-2"><a href="/news/article-58686.htm" title="动物防疫移动注射栏规范要求（动物防疫疫苗管理）">动物防疫移动注射栏规范要求（动物防疫疫苗管理）</a></li>
                        <li class="py-2"><a href="/news/article-54690.htm" title="动物防疫工作总结及下步工作开展（动物防疫工作年底总结）">动物防疫工作总结及下步工作开展（动物防疫工作年底总结）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <style>
    .video-heading {
        max-width: 750px;
        margin: 0 auto;
    }

    .video-heading h3 {
        font-size: 60px;
        opacity: 0.8;
        line-height: 58px;
        font-weight: 300;
        text-transform: capitalize;
        color: #fff;
    }

    .video-responsive {
        padding-bottom: 600px;
        position: relative;
        width: 100%;
    }

    .canvas,
    .video {
        left: 0;
        position: absolute;
        top: 0;
        background: #000;
        z-index: 5;
        overflow: hidden;
        width: 100%;
        height: 600px;
        object-fit: cover;
    }

    #over_video {
        position: absolute;
        width: 100%;
        height: 100%;
        text-align: center;
        top: 0;
        z-index: 10;
        color: #FFF;
    }

    .bg-mask {
        background: rgba(0, 0, 0, 0.3);
        height: inherit;
        display: grid;
        align-items: center;
        padding: 0 15px;
    }

    @media screen and (max-width: 568px) {

        .canvas,
        .video {
            height: 400px;
        }

        .video-responsive {
            padding-bottom: 400px;
        }


        .video-heading h3 {
            font-size: 35px;
            line-height: 48px;
            margin-bottom: 20px;
        }
    }
    </style>
    <script src="/assets/website/js/frontend/vmess_node/canvas-video-player.js"></script>
    <script>
    var isIOS = /iPad|iPhone|iPod/.test(navigator.platform);

    if (isIOS) {

        var canvasVideo = new CanvasVideoPlayer({
            videoSelector: '.video',
            canvasSelector: '.canvas',
            timelineSelector: false,
            autoplay: true,
            makeLoop: true,
            pauseOnClick: false,
            audio: false
        });

    } else {

        // Use HTML5 video
        document.querySelectorAll('.canvas')[0].style.display = 'none';

    }
    </script>
    <!-- scripts -->
    <footer>
        <!-- footer -->
        <section class="w3l-footer">
            <div class="w3l-footer-16-main py-5">
                <div class="container">
                    <div class="d-flex below-section justify-content-between align-items-center pt-4 mt-5">
                        <div class="columns text-lg-left text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p>Vmess Node免费节点订阅官网 版权所有 Powered by WordPress
                            </p>
                        </div>
                        <div class="columns-2 mt-lg-0 mt-3">
                            <ul class="social">
                                <li><a href="#facebook"><span class="fa fa-facebook" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#linkedin"><span class="fa fa-linkedin" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#twitter"><span class="fa fa-twitter" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#google"><span class="fa fa-google-plus" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#github"><span class="fa fa-github" aria-hidden="true"></span></a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- move top -->
            <button onclick="topFunction()" id="movetop" title="Go to top">
                <span class="fa fa-angle-up"></span>
            </button>
            <script>
            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function() {
                scrollFunction()
            };

            function scrollFunction() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    document.getElementById("movetop").style.display = "block";
                } else {
                    document.getElementById("movetop").style.display = "none";
                }
            }

            // When the user clicks on the button, scroll to the top of the document
            function topFunction() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
            </script>
            <!-- //move top -->
            <script>
            $(function() {
                $('.navbar-toggler').click(function() {
                    $('body').toggleClass('noscroll');
                })
            });
            </script>
        </section>
        <!-- //footer -->
    </footer>
    <!-- jQuery -->
    <script src="/assets/website/js/frontend/vmess_node/jquery-3.5.1.min.js"></script>
    <!-- Template JavaScript -->
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/vmess_node/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/vmess_node/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <script src="/assets/website/js/frontend/vmess_node/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <script src="/assets/website/js/frontend/vmess_node/owl.carousel.js"></script>
    <!-- testimonials for owlcarousel -->
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //testimonials script for owlcarousel -->
    <!-- for blog carousel slider -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            stagePadding: 20,
            margin: 15,
            nav: false,
            loop: false,
            responsive: {
                0: {
                    items: 1
                },
                600: {
                    items: 2
                },
                1000: {
                    items: 3
                }
            }
        })
    })
    </script>
    <!-- //for blog carousel slider -->
    <script>
    var lFollowX = 0,
        lFollowY = 0,
        x = 0,
        y = 0,
        friction = 1 / 30;

    function animate() {
        x += (lFollowX - x) * friction;
        y += (lFollowY - y) * friction;

        translate = 'translate(' + x + 'px, ' + y + 'px) scale(1.1)';

        $('.banner-image').css({
            '-webit-transform': translate,
            '-moz-transform': translate,
            'transform': translate
        });

        window.requestAnimationFrame(animate);
    }

    $(window).on('mousemove click', function(e) {

        var lMouseX = Math.max(-100, Math.min(100, $(window).width() / 2 - e.clientX));
        var lMouseY = Math.max(-100, Math.min(100, $(window).height() / 2 - e.clientY));
        lFollowX = (20 * lMouseX) / 100; // 100 : 12 = lMouxeX : lFollow
        lFollowY = (10 * lMouseY) / 100;

    });

    animate();
    </script>
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- Bootstrap JS -->
    <script src="/assets/website/js/frontend/vmess_node/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>